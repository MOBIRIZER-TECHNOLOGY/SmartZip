{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red245\green245\blue245;\red148\green6\blue75;
\red19\green36\blue126;\red14\green114\blue164;\red132\green134\blue132;\red170\green13\blue145;\red92\green38\blue153;
\red196\green26\blue22;\red148\green6\blue75;\red245\green245\blue245;\red38\green38\blue38;\red14\green114\blue164;
\red101\green71\blue146;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl380\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl380\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/Alamofire/Alamofire"}}{\fldrslt \cf2 https://github.com/Alamofire/Alamofire}}\
Alamofire\cf4 .\cf2 request(\cf4 .\cf2 GET, \cf5 "https://httpbin.org/get"\cf2 , parameters: [\cf5 "foo"\cf2 : \cf5 "bar"\cf2 ])\
         \cf4 .\cf2 responseJSON \{ response \cf4 in\cf2 \
             \cf6 print\cf2 (response\cf4 .\cf2 request)  \cf7 // original URL request\cf2 \
             \cf6 print\cf2 (response\cf4 .\cf2 response) \cf7 // URL response\cf2 \
             \cf6 print\cf2 (response\cf4 .\cf2 data)     \cf7 // server data\cf2 \
             \cf6 print\cf2 (response\cf4 .\cf2 result)   \cf7 // result of response serialization\cf2 \
\
             \cf4 if\cf2  \cf4 let\cf2  JSON \cf4 =\cf2  response\cf4 .\cf2 result\cf4 .\cf6 value\cf2  \{\
                 \cf6 print\cf2 (\cf5 "JSON: \\(\cf2 JSON\cf5 )"\cf2 )\
             \}\
         \}\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 imageView\cf4 .\cf2 kf_setImageWithURL(NSURL(string: \cf5 "http://your_image_url.png"\cf2 )\cf4 !\cf2 , placeholderImage: \cf6 nil\cf2 )\
\
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\fs22 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0  \cf8 func\cf0  textFieldShouldReturn(textField: \cf9 UITextField\cf0 ) -> \cf9 Bool\cf0  \{\
    \
    \cf8 let\cf0  textToTranslate = \cf8 self\cf0 .textFieldToTranslate.text\
        \
    \cf8 let\cf0  parameters = [\cf10 "q"\cf0 :textToTranslate,\
                      \cf10 "langpair"\cf0 :\cf10 "en|es"\cf0 ]\
    \
    Alamofire.request(.GET, \cf10 "http://api.mymemory.translated.net/get"\cf0 , parameters:parameters)\
    .responseJSON \{ (\cf8 _\cf0 , \cf8 _\cf0 , JSON, \cf8 _\cf0 ) -> \cf9 Void\cf0  \cf8 in\cf0 \
      \
      \cf8 let\cf0  translatedText: \cf9 String\cf0 ? = JSON?.valueForKeyPath(\cf10 "responseData.translatedText"\cf0 ) \cf8 as\cf0  \cf9 String\cf0 ?\
      \
      \cf8 if\cf0  \cf8 let\cf0  translated = translatedText \{\
        \cf8 self\cf0 .translatedTextLabel.text = translated\
      \} \cf8 else\cf0  \{\
        \cf8 self\cf0 .translatedTextLabel.text = \cf10 "No translation available."\cf0 \
      \}\
      \
    \}\
    \
    textField.resignFirstResponder()\
    \
    \cf8 return\cf0  \cf8 true\cf0 \
  \}\
\
\
\
\pard\pardeftab720\sl380\partightenfactor0

\fs28 \cf11 \cb12 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec11 import\cf13 \strokec13  \cf14 \strokec14 SnapKit\cf13 \strokec13 \
\
\cf11 \strokec11 class\cf13 \strokec13  MyViewController: UIViewController \{\
\
    \cf11 \strokec11 lazy\cf13 \strokec13  \cf11 \strokec11 var\cf13 \strokec13  box \cf11 \strokec11 =\cf13 \strokec13  UIView()\
\
    \cf11 \strokec11 override\cf13 \strokec13  \cf11 \strokec11 func\cf13 \strokec13  \cf15 \strokec15 viewDidLoad\cf13 \strokec13 () \{\
        \cf11 \strokec11 super.\cf13 \strokec13 viewDidLoad()\
\
        \cf11 \strokec11 self.\cf13 \strokec13 view\cf11 \strokec11 .\cf13 \strokec13 addSubview(box)\
        box\cf11 \strokec11 .\cf13 \strokec13 snp_makeConstraints \{ make \cf11 \strokec11 in\cf13 \strokec13 \
           make\cf11 \strokec11 .\cf13 \strokec13 width\cf11 \strokec11 .\cf13 \strokec13 height\cf11 \strokec11 .\cf13 \strokec13 equalTo(\cf14 \strokec14 50\cf13 \strokec13 )\
           make\cf11 \strokec11 .\cf13 \strokec13 center\cf11 \strokec11 .\cf13 \strokec13 equalTo(\cf11 \strokec11 self.\cf13 \strokec13 view)\
        \}\
    \}\
\
\}\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\fs22 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
}